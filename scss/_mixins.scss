/* ======================================= MIXIN DEFINITIONS ============================================ */

/*********************
MEDIA QUERY MIXIN
*********************/

$no-mq-support: false !default;
$serve-to-nomq-max-width: 60em;

@mixin mq($query) {
  @if $no-mq-support{
    @if $query < $serve-to-nomq-max-width {
      @content;
    }
  } @else {
    @media only screen and ( 'min-width:' + $query ) {
      @content;
    }
  }
}

/*********************
TRANSITION
*********************/

@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit", "-ms", "-o");
  @each $prefix in $prefixes {
    #{$prefix}-transition: $transition;
  }

  transition: $transition;
}


/*********************
REM-FALLBACK
*********************/


@function parseInt($n) { 
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : (); 
  $rem: (); 
  
  @each $value in $values { 
   
    @if $value == 0 or $value == auto { 
      $px : append($px , $value);
      $rem: append($rem, $value);
    }
    
    @else { 
      $unit: unit($value);    
      $val: parseInt($value); 
      
      @if $unit == "px" {  
        $px : append($px,  $value);
        $rem: append($rem, ($val / $basefontsize + rem));
      }
      
      @if $unit == "rem" { 
        $px : append($px,  ($val * $basefontsize + px));
        $rem: append($rem, $value);
      }
    }
  }
  
  @if $px == $rem {     
    #{$property}: $px;  
  } @else {
    #{$property}: $px; 
    #{$property}: $rem; 
  }
}


/*********************
CSS3 GRADIENTS
*********************/

@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
  background-color: $to;
  background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
  background-image: -webkit-linear-gradient(top, $from, $to);
  background-image: -moz-linear-gradient(top, $from, $to);
  background-image: -o-linear-gradient(top, $from, $to);
  background-image: linear-gradient(to bottom, $from, $to);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str($from)}', endColorstr='#{ie-hex-str($to)}',GradientType=0 );
}

/*********************
BORDER RADIUS
*********************/

@mixin radius($topleft, $topright: $topleft, $bottomright: $topleft, $bottomleft: $topleft) {

    -moz-border-radius:       $topleft $topright $bottomright $bottomleft;
    -webkit-border-radius:          $topleft $topright $bottomright $bottomleft;
    border-radius:                  $topleft $topright $bottomright $bottomleft;

}

/*********************
BOX SHADOWS
*********************/

@mixin shadow {
  -webkit-box-shadow:0 15px 10px -10px rgba(0, 0, 0, 0.3), 0 1px 4px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.1) inset;
  -moz-box-shadow:0 15px 10px -10px rgba(0, 0, 0, 0.3), 0 1px 4px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.1) inset;
  box-shadow:0 15px 10px -10px rgba(0, 0, 0, 0.3), 0 1px 4px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.1) inset;
}


/*********************
DELAYED ANIMATION MIXIN
*********************/

@mixin animation($name, $duration:1s, $delay:0s, $iteration:1) {
  $prefixes:      ("-webkit-", "-moz-", "-o-", "");
  @each $prefix in $prefixes {
    #{$prefix}animation-name:$name;
    #{$prefix}animation-duration:$duration;
    #{$prefix}animation-timing-function:ease-out;
    #{$prefix}animation-iteration-count:$iteration;
    #{$prefix}animation-direction:normal;
    #{$prefix}animation-delay:$delay;
    #{$prefix}animation-play-state:running;
    #{$prefix}animation-fill-mode:forwards;
  }
  -webkit-backface-visibility: hidden;
  transform: translate3d(0, 0, 0);
}

@mixin animation-delay($delay:0s) {
$prefixes:      ("-webkit-", "-moz-", "-o-", "");
  @each $prefix in $prefixes {
    #{$prefix}animation-delay:$delay;
  }
}